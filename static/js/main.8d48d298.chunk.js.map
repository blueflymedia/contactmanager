{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/About.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/pages/NotFound.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","delete","name","email","phone","className","onClick","style","cursor","to","float","color","marginLeft","marginRight","aria-hidden","bind","Contacts","deleteContact","newContacts","key","Header","branding","href","defaultProps","About","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","aria-describedby","AddContact","errors","onInputChange","e","target","submitForm","preventDefault","newContact","post","history","push","onSubmit","NotFound","class","EditContact","updateContact","match","params","put","App","basename","process","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8d48d298.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  //async, await method\n  async componentDidMount() {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n\n    this.setState({\n      contacts: res.data\n    });\n  }\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Consumer } from \"../../context\";\nimport axios from \"axios\";\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}\n                <i\n                  className=\"fas fa-sort-down\"\n                  onClick={() =>\n                    this.setState({\n                      showContactInfo: !this.state.showContactInfo\n                    })\n                  }\n                  style={{ cursor: \"pointer\" }}\n                />\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className=\"fa fa-pencil-alt\"\n                    style={{\n                      cursor: \"pointer\",\n                      float: \"right\",\n                      color: \"#292929\",\n                      marginLeft: \"2rem\",\n                      marginRight: \"1rem\"\n                    }}\n                    aria-hidden=\"true\"\n                  ></i>\n                </Link>\n                <i\n                  className=\"fa fa-times\"\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                  aria-hidden=\"true\"\n                />\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../context\";\n\nclass Contacts extends Component {\n  //dont need constructor/super for just state\n\n  deleteContact = id => {\n    const { contacts } = this.state;\n\n    const newContacts = contacts.filter(contact => contact.id !== id);\n    this.setState({\n      contacts: newContacts\n    });\n  };\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <>\n              <h1 className=\"display-5 mb-3 mt-5\">\n                <span className=\"text-danger\">Contact</span> List\n              </h1>\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fa fa-home pr-2\" aria-hidden=\"true\"></i>\n                Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fa fa-question pr-2\" aria-hidden=\"true\"></i>\n                About\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fa fa-address-book pr-2\" aria-hidden=\"true\"></i>\n                Add a Contact\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: \"My App\"\n};\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst About = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n\nexport default About;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        id=\"\"\n        className={classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": error\n        })}\n        placeholder={placeholder}\n        aria-describedby=\"helpId\"\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\nTextInputGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: \"text\"\n};\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\n/* import uuid from \"uuid\"; */\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n  onInputChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  submitForm = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    //Check for errors\n    if (!name) {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n\n    if (!email) {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n    if (!phone) {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    //if key and value are same, you don't need to duplicate like\n    // name:name, email:email, phone: phone\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n    const res = await axios.post(\n      \"https://jsonplaceholder.typicode.com/users\",\n      newContact\n    );\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\n\n    //clear state\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    this.props.history.push(\"/\");\n  };\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.submitForm.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    value={name}\n                    placeholder=\"Enter your name\"\n                    type=\"text\"\n                    onChange={this.onInputChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    value={email}\n                    placeholder=\"Enter your email\"\n                    type=\"email\"\n                    onChange={this.onInputChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    value={phone}\n                    placeholder=\"Enter your phone\"\n                    type=\"text\"\n                    onChange={this.onInputChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    name=\"\"\n                    id=\"\"\n                    className=\"btn btn-primary btn-block\"\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h1 class=\"display-4\">404 Page Not Found</h1>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\n/* import uuid from \"uuid\"; */\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n    const contact = res.data;\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n  onInputChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  submitForm = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    //Check for errors\n    if (!name) {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n\n    if (!email) {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n    if (!phone) {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n    const updateContact = {\n      name,\n      email,\n      phone\n    };\n    const { id } = this.props.match.params;\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updateContact\n    );\n\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\n    //clear state\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    this.props.history.push(\"/\");\n  };\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.submitForm.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    value={name}\n                    placeholder=\"Enter your name\"\n                    type=\"text\"\n                    onChange={this.onInputChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    value={email}\n                    placeholder=\"Enter your email\"\n                    type=\"email\"\n                    onChange={this.onInputChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    value={phone}\n                    placeholder=\"Enter your phone\"\n                    type=\"text\"\n                    onChange={this.onInputChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    name=\"\"\n                    id=\"\"\n                    className=\"btn btn-primary btn-block\"\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport NotFound from \"./components/pages/NotFound\";\nimport EditContact from \"./components/contacts/EditContact\";\n\nimport { Provider } from \"./context\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./fontawesome/css/all.css\";\n\nfunction App() {\n  return (\n    <Provider>\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}